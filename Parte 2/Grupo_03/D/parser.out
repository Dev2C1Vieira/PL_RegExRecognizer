Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> IDENTIFIER EQUALS expression SEMI
Rule 2     statement -> expression SEMI
Rule 3     expression -> expression PLUS expression
Rule 4     expression -> expression MINUS expression
Rule 5     expression -> expression TIMES expression
Rule 6     expression -> expression DIVIDE expression
Rule 7     expression -> LPAREN expression RPAREN
Rule 8     expression -> NUMBER
Rule 9     expression -> FLOAT
Rule 10    expression -> STRING
Rule 11    expression -> IDENTIFIER
Rule 12    expression -> LBRACKET expression_list RBRACKET
Rule 13    expression -> LBRACKET RBRACKET
Rule 14    expression_list -> expression_list COMMA expression
Rule 15    expression_list -> expression
Rule 16    expression -> IDENTIFIER LPAREN expression RPAREN
Rule 17    expression -> IDENTIFIER LPAREN expression COMMA expression RPAREN
Rule 18    expression -> MAP LPAREN expression RPAREN
Rule 19    expression -> FOLD LPAREN expression COMMA expression RPAREN
Rule 20    statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON expression SEMI
Rule 21    statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON statement_list FIM
Rule 22    params -> params COMMA IDENTIFIER
Rule 23    params -> IDENTIFIER
Rule 24    params -> empty
Rule 25    statement_list -> statement_list statement
Rule 26    statement_list -> statement
Rule 27    statement -> ESCREVER LPAREN expression RPAREN SEMI
Rule 28    statement -> ESCREVER LPAREN expression COMMA expression RPAREN SEMI
Rule 29    empty -> <empty>

Terminals, with rules where they appear

COLON                : 20 21
COMMA                : 14 17 19 22 28
DIVIDE               : 6
EQUALS               : 1
ESCREVER             : 27 28
FIM                  : 21
FLOAT                : 9
FOLD                 : 19
FUNCAO               : 20 21
IDENTIFIER           : 1 11 16 17 20 21 22 23
LBRACKET             : 12 13
LPAREN               : 7 16 17 18 19 20 21 27 28
MAP                  : 18
MINUS                : 4
NUMBER               : 8
PLUS                 : 3
RBRACKET             : 12 13
RPAREN               : 7 16 17 18 19 20 21 27 28
SEMI                 : 1 2 20 27 28
STRING               : 10
TIMES                : 5
error                : 

Nonterminals, with rules where they appear

empty                : 24
expression           : 1 2 3 3 4 4 5 5 6 6 7 14 15 16 17 17 18 19 19 20 27 28 28
expression_list      : 12 14
params               : 20 21 22
statement            : 25 26 0
statement_list       : 21 25

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . IDENTIFIER EQUALS expression SEMI
    (2) statement -> . expression SEMI
    (20) statement -> . FUNCAO IDENTIFIER LPAREN params RPAREN COLON expression SEMI
    (21) statement -> . FUNCAO IDENTIFIER LPAREN params RPAREN COLON statement_list FIM
    (27) statement -> . ESCREVER LPAREN expression RPAREN SEMI
    (28) statement -> . ESCREVER LPAREN expression COMMA expression RPAREN SEMI
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . NUMBER
    (9) expression -> . FLOAT
    (10) expression -> . STRING
    (11) expression -> . IDENTIFIER
    (12) expression -> . LBRACKET expression_list RBRACKET
    (13) expression -> . LBRACKET RBRACKET
    (16) expression -> . IDENTIFIER LPAREN expression RPAREN
    (17) expression -> . IDENTIFIER LPAREN expression COMMA expression RPAREN
    (18) expression -> . MAP LPAREN expression RPAREN
    (19) expression -> . FOLD LPAREN expression COMMA expression RPAREN

    IDENTIFIER      shift and go to state 2
    FUNCAO          shift and go to state 4
    ESCREVER        shift and go to state 6
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 9
    LBRACKET        shift and go to state 10
    MAP             shift and go to state 11
    FOLD            shift and go to state 12

    statement                      shift and go to state 1
    expression                     shift and go to state 3

state 1

    (0) S' -> statement .



state 2

    (1) statement -> IDENTIFIER . EQUALS expression SEMI
    (11) expression -> IDENTIFIER .
    (16) expression -> IDENTIFIER . LPAREN expression RPAREN
    (17) expression -> IDENTIFIER . LPAREN expression COMMA expression RPAREN

    EQUALS          shift and go to state 13
    SEMI            reduce using rule 11 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 11 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 11 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 11 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 11 (expression -> IDENTIFIER .)
    LPAREN          shift and go to state 14


state 3

    (2) statement -> expression . SEMI
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    SEMI            shift and go to state 15
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19


state 4

    (20) statement -> FUNCAO . IDENTIFIER LPAREN params RPAREN COLON expression SEMI
    (21) statement -> FUNCAO . IDENTIFIER LPAREN params RPAREN COLON statement_list FIM

    IDENTIFIER      shift and go to state 20


state 5

    (7) expression -> LPAREN . expression RPAREN
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . NUMBER
    (9) expression -> . FLOAT
    (10) expression -> . STRING
    (11) expression -> . IDENTIFIER
    (12) expression -> . LBRACKET expression_list RBRACKET
    (13) expression -> . LBRACKET RBRACKET
    (16) expression -> . IDENTIFIER LPAREN expression RPAREN
    (17) expression -> . IDENTIFIER LPAREN expression COMMA expression RPAREN
    (18) expression -> . MAP LPAREN expression RPAREN
    (19) expression -> . FOLD LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 9
    IDENTIFIER      shift and go to state 22
    LBRACKET        shift and go to state 10
    MAP             shift and go to state 11
    FOLD            shift and go to state 12

    expression                     shift and go to state 21

state 6

    (27) statement -> ESCREVER . LPAREN expression RPAREN SEMI
    (28) statement -> ESCREVER . LPAREN expression COMMA expression RPAREN SEMI

    LPAREN          shift and go to state 23


state 7

    (8) expression -> NUMBER .

    SEMI            reduce using rule 8 (expression -> NUMBER .)
    PLUS            reduce using rule 8 (expression -> NUMBER .)
    MINUS           reduce using rule 8 (expression -> NUMBER .)
    TIMES           reduce using rule 8 (expression -> NUMBER .)
    DIVIDE          reduce using rule 8 (expression -> NUMBER .)
    RPAREN          reduce using rule 8 (expression -> NUMBER .)
    RBRACKET        reduce using rule 8 (expression -> NUMBER .)
    COMMA           reduce using rule 8 (expression -> NUMBER .)


state 8

    (9) expression -> FLOAT .

    SEMI            reduce using rule 9 (expression -> FLOAT .)
    PLUS            reduce using rule 9 (expression -> FLOAT .)
    MINUS           reduce using rule 9 (expression -> FLOAT .)
    TIMES           reduce using rule 9 (expression -> FLOAT .)
    DIVIDE          reduce using rule 9 (expression -> FLOAT .)
    RPAREN          reduce using rule 9 (expression -> FLOAT .)
    RBRACKET        reduce using rule 9 (expression -> FLOAT .)
    COMMA           reduce using rule 9 (expression -> FLOAT .)


state 9

    (10) expression -> STRING .

    SEMI            reduce using rule 10 (expression -> STRING .)
    PLUS            reduce using rule 10 (expression -> STRING .)
    MINUS           reduce using rule 10 (expression -> STRING .)
    TIMES           reduce using rule 10 (expression -> STRING .)
    DIVIDE          reduce using rule 10 (expression -> STRING .)
    RPAREN          reduce using rule 10 (expression -> STRING .)
    RBRACKET        reduce using rule 10 (expression -> STRING .)
    COMMA           reduce using rule 10 (expression -> STRING .)


state 10

    (12) expression -> LBRACKET . expression_list RBRACKET
    (13) expression -> LBRACKET . RBRACKET
    (14) expression_list -> . expression_list COMMA expression
    (15) expression_list -> . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . NUMBER
    (9) expression -> . FLOAT
    (10) expression -> . STRING
    (11) expression -> . IDENTIFIER
    (12) expression -> . LBRACKET expression_list RBRACKET
    (13) expression -> . LBRACKET RBRACKET
    (16) expression -> . IDENTIFIER LPAREN expression RPAREN
    (17) expression -> . IDENTIFIER LPAREN expression COMMA expression RPAREN
    (18) expression -> . MAP LPAREN expression RPAREN
    (19) expression -> . FOLD LPAREN expression COMMA expression RPAREN

    RBRACKET        shift and go to state 25
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 9
    IDENTIFIER      shift and go to state 22
    LBRACKET        shift and go to state 10
    MAP             shift and go to state 11
    FOLD            shift and go to state 12

    expression_list                shift and go to state 24
    expression                     shift and go to state 26

state 11

    (18) expression -> MAP . LPAREN expression RPAREN

    LPAREN          shift and go to state 27


state 12

    (19) expression -> FOLD . LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 28


state 13

    (1) statement -> IDENTIFIER EQUALS . expression SEMI
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . NUMBER
    (9) expression -> . FLOAT
    (10) expression -> . STRING
    (11) expression -> . IDENTIFIER
    (12) expression -> . LBRACKET expression_list RBRACKET
    (13) expression -> . LBRACKET RBRACKET
    (16) expression -> . IDENTIFIER LPAREN expression RPAREN
    (17) expression -> . IDENTIFIER LPAREN expression COMMA expression RPAREN
    (18) expression -> . MAP LPAREN expression RPAREN
    (19) expression -> . FOLD LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 9
    IDENTIFIER      shift and go to state 22
    LBRACKET        shift and go to state 10
    MAP             shift and go to state 11
    FOLD            shift and go to state 12

    expression                     shift and go to state 29

state 14

    (16) expression -> IDENTIFIER LPAREN . expression RPAREN
    (17) expression -> IDENTIFIER LPAREN . expression COMMA expression RPAREN
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . NUMBER
    (9) expression -> . FLOAT
    (10) expression -> . STRING
    (11) expression -> . IDENTIFIER
    (12) expression -> . LBRACKET expression_list RBRACKET
    (13) expression -> . LBRACKET RBRACKET
    (16) expression -> . IDENTIFIER LPAREN expression RPAREN
    (17) expression -> . IDENTIFIER LPAREN expression COMMA expression RPAREN
    (18) expression -> . MAP LPAREN expression RPAREN
    (19) expression -> . FOLD LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 9
    IDENTIFIER      shift and go to state 22
    LBRACKET        shift and go to state 10
    MAP             shift and go to state 11
    FOLD            shift and go to state 12

    expression                     shift and go to state 30

state 15

    (2) statement -> expression SEMI .

    $end            reduce using rule 2 (statement -> expression SEMI .)
    FIM             reduce using rule 2 (statement -> expression SEMI .)
    IDENTIFIER      reduce using rule 2 (statement -> expression SEMI .)
    FUNCAO          reduce using rule 2 (statement -> expression SEMI .)
    ESCREVER        reduce using rule 2 (statement -> expression SEMI .)
    LPAREN          reduce using rule 2 (statement -> expression SEMI .)
    NUMBER          reduce using rule 2 (statement -> expression SEMI .)
    FLOAT           reduce using rule 2 (statement -> expression SEMI .)
    STRING          reduce using rule 2 (statement -> expression SEMI .)
    LBRACKET        reduce using rule 2 (statement -> expression SEMI .)
    MAP             reduce using rule 2 (statement -> expression SEMI .)
    FOLD            reduce using rule 2 (statement -> expression SEMI .)


state 16

    (3) expression -> expression PLUS . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . NUMBER
    (9) expression -> . FLOAT
    (10) expression -> . STRING
    (11) expression -> . IDENTIFIER
    (12) expression -> . LBRACKET expression_list RBRACKET
    (13) expression -> . LBRACKET RBRACKET
    (16) expression -> . IDENTIFIER LPAREN expression RPAREN
    (17) expression -> . IDENTIFIER LPAREN expression COMMA expression RPAREN
    (18) expression -> . MAP LPAREN expression RPAREN
    (19) expression -> . FOLD LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 9
    IDENTIFIER      shift and go to state 22
    LBRACKET        shift and go to state 10
    MAP             shift and go to state 11
    FOLD            shift and go to state 12

    expression                     shift and go to state 31

state 17

    (4) expression -> expression MINUS . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . NUMBER
    (9) expression -> . FLOAT
    (10) expression -> . STRING
    (11) expression -> . IDENTIFIER
    (12) expression -> . LBRACKET expression_list RBRACKET
    (13) expression -> . LBRACKET RBRACKET
    (16) expression -> . IDENTIFIER LPAREN expression RPAREN
    (17) expression -> . IDENTIFIER LPAREN expression COMMA expression RPAREN
    (18) expression -> . MAP LPAREN expression RPAREN
    (19) expression -> . FOLD LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 9
    IDENTIFIER      shift and go to state 22
    LBRACKET        shift and go to state 10
    MAP             shift and go to state 11
    FOLD            shift and go to state 12

    expression                     shift and go to state 32

state 18

    (5) expression -> expression TIMES . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . NUMBER
    (9) expression -> . FLOAT
    (10) expression -> . STRING
    (11) expression -> . IDENTIFIER
    (12) expression -> . LBRACKET expression_list RBRACKET
    (13) expression -> . LBRACKET RBRACKET
    (16) expression -> . IDENTIFIER LPAREN expression RPAREN
    (17) expression -> . IDENTIFIER LPAREN expression COMMA expression RPAREN
    (18) expression -> . MAP LPAREN expression RPAREN
    (19) expression -> . FOLD LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 9
    IDENTIFIER      shift and go to state 22
    LBRACKET        shift and go to state 10
    MAP             shift and go to state 11
    FOLD            shift and go to state 12

    expression                     shift and go to state 33

state 19

    (6) expression -> expression DIVIDE . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . NUMBER
    (9) expression -> . FLOAT
    (10) expression -> . STRING
    (11) expression -> . IDENTIFIER
    (12) expression -> . LBRACKET expression_list RBRACKET
    (13) expression -> . LBRACKET RBRACKET
    (16) expression -> . IDENTIFIER LPAREN expression RPAREN
    (17) expression -> . IDENTIFIER LPAREN expression COMMA expression RPAREN
    (18) expression -> . MAP LPAREN expression RPAREN
    (19) expression -> . FOLD LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 9
    IDENTIFIER      shift and go to state 22
    LBRACKET        shift and go to state 10
    MAP             shift and go to state 11
    FOLD            shift and go to state 12

    expression                     shift and go to state 34

state 20

    (20) statement -> FUNCAO IDENTIFIER . LPAREN params RPAREN COLON expression SEMI
    (21) statement -> FUNCAO IDENTIFIER . LPAREN params RPAREN COLON statement_list FIM

    LPAREN          shift and go to state 35


state 21

    (7) expression -> LPAREN expression . RPAREN
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 36
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19


state 22

    (11) expression -> IDENTIFIER .
    (16) expression -> IDENTIFIER . LPAREN expression RPAREN
    (17) expression -> IDENTIFIER . LPAREN expression COMMA expression RPAREN

    RPAREN          reduce using rule 11 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 11 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 11 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 11 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 11 (expression -> IDENTIFIER .)
    RBRACKET        reduce using rule 11 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 11 (expression -> IDENTIFIER .)
    SEMI            reduce using rule 11 (expression -> IDENTIFIER .)
    LPAREN          shift and go to state 14


state 23

    (27) statement -> ESCREVER LPAREN . expression RPAREN SEMI
    (28) statement -> ESCREVER LPAREN . expression COMMA expression RPAREN SEMI
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . NUMBER
    (9) expression -> . FLOAT
    (10) expression -> . STRING
    (11) expression -> . IDENTIFIER
    (12) expression -> . LBRACKET expression_list RBRACKET
    (13) expression -> . LBRACKET RBRACKET
    (16) expression -> . IDENTIFIER LPAREN expression RPAREN
    (17) expression -> . IDENTIFIER LPAREN expression COMMA expression RPAREN
    (18) expression -> . MAP LPAREN expression RPAREN
    (19) expression -> . FOLD LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 9
    IDENTIFIER      shift and go to state 22
    LBRACKET        shift and go to state 10
    MAP             shift and go to state 11
    FOLD            shift and go to state 12

    expression                     shift and go to state 37

state 24

    (12) expression -> LBRACKET expression_list . RBRACKET
    (14) expression_list -> expression_list . COMMA expression

    RBRACKET        shift and go to state 38
    COMMA           shift and go to state 39


state 25

    (13) expression -> LBRACKET RBRACKET .

    SEMI            reduce using rule 13 (expression -> LBRACKET RBRACKET .)
    PLUS            reduce using rule 13 (expression -> LBRACKET RBRACKET .)
    MINUS           reduce using rule 13 (expression -> LBRACKET RBRACKET .)
    TIMES           reduce using rule 13 (expression -> LBRACKET RBRACKET .)
    DIVIDE          reduce using rule 13 (expression -> LBRACKET RBRACKET .)
    RPAREN          reduce using rule 13 (expression -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 13 (expression -> LBRACKET RBRACKET .)
    COMMA           reduce using rule 13 (expression -> LBRACKET RBRACKET .)


state 26

    (15) expression_list -> expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    RBRACKET        reduce using rule 15 (expression_list -> expression .)
    COMMA           reduce using rule 15 (expression_list -> expression .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19


state 27

    (18) expression -> MAP LPAREN . expression RPAREN
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . NUMBER
    (9) expression -> . FLOAT
    (10) expression -> . STRING
    (11) expression -> . IDENTIFIER
    (12) expression -> . LBRACKET expression_list RBRACKET
    (13) expression -> . LBRACKET RBRACKET
    (16) expression -> . IDENTIFIER LPAREN expression RPAREN
    (17) expression -> . IDENTIFIER LPAREN expression COMMA expression RPAREN
    (18) expression -> . MAP LPAREN expression RPAREN
    (19) expression -> . FOLD LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 9
    IDENTIFIER      shift and go to state 22
    LBRACKET        shift and go to state 10
    MAP             shift and go to state 11
    FOLD            shift and go to state 12

    expression                     shift and go to state 40

state 28

    (19) expression -> FOLD LPAREN . expression COMMA expression RPAREN
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . NUMBER
    (9) expression -> . FLOAT
    (10) expression -> . STRING
    (11) expression -> . IDENTIFIER
    (12) expression -> . LBRACKET expression_list RBRACKET
    (13) expression -> . LBRACKET RBRACKET
    (16) expression -> . IDENTIFIER LPAREN expression RPAREN
    (17) expression -> . IDENTIFIER LPAREN expression COMMA expression RPAREN
    (18) expression -> . MAP LPAREN expression RPAREN
    (19) expression -> . FOLD LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 9
    IDENTIFIER      shift and go to state 22
    LBRACKET        shift and go to state 10
    MAP             shift and go to state 11
    FOLD            shift and go to state 12

    expression                     shift and go to state 41

state 29

    (1) statement -> IDENTIFIER EQUALS expression . SEMI
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    SEMI            shift and go to state 42
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19


state 30

    (16) expression -> IDENTIFIER LPAREN expression . RPAREN
    (17) expression -> IDENTIFIER LPAREN expression . COMMA expression RPAREN
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 43
    COMMA           shift and go to state 44
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19


state 31

    (3) expression -> expression PLUS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMI            reduce using rule 3 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 3 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 3 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 3 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19

  ! PLUS            [ reduce using rule 3 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 3 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 3 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 3 (expression -> expression PLUS expression .) ]


state 32

    (4) expression -> expression MINUS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMI            reduce using rule 4 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 4 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 4 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 4 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19

  ! PLUS            [ reduce using rule 4 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 4 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 4 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 4 (expression -> expression MINUS expression .) ]


state 33

    (5) expression -> expression TIMES expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMI            reduce using rule 5 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 5 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 5 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 5 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19

  ! PLUS            [ reduce using rule 5 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 5 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 5 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 5 (expression -> expression TIMES expression .) ]


state 34

    (6) expression -> expression DIVIDE expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMI            reduce using rule 6 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 6 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 6 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 6 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19

  ! PLUS            [ reduce using rule 6 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 6 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 6 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 6 (expression -> expression DIVIDE expression .) ]


state 35

    (20) statement -> FUNCAO IDENTIFIER LPAREN . params RPAREN COLON expression SEMI
    (21) statement -> FUNCAO IDENTIFIER LPAREN . params RPAREN COLON statement_list FIM
    (22) params -> . params COMMA IDENTIFIER
    (23) params -> . IDENTIFIER
    (24) params -> . empty
    (29) empty -> .

    IDENTIFIER      shift and go to state 45
    RPAREN          reduce using rule 29 (empty -> .)
    COMMA           reduce using rule 29 (empty -> .)

    params                         shift and go to state 46
    empty                          shift and go to state 47

state 36

    (7) expression -> LPAREN expression RPAREN .

    SEMI            reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 7 (expression -> LPAREN expression RPAREN .)


state 37

    (27) statement -> ESCREVER LPAREN expression . RPAREN SEMI
    (28) statement -> ESCREVER LPAREN expression . COMMA expression RPAREN SEMI
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 48
    COMMA           shift and go to state 49
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19


state 38

    (12) expression -> LBRACKET expression_list RBRACKET .

    SEMI            reduce using rule 12 (expression -> LBRACKET expression_list RBRACKET .)
    PLUS            reduce using rule 12 (expression -> LBRACKET expression_list RBRACKET .)
    MINUS           reduce using rule 12 (expression -> LBRACKET expression_list RBRACKET .)
    TIMES           reduce using rule 12 (expression -> LBRACKET expression_list RBRACKET .)
    DIVIDE          reduce using rule 12 (expression -> LBRACKET expression_list RBRACKET .)
    RPAREN          reduce using rule 12 (expression -> LBRACKET expression_list RBRACKET .)
    RBRACKET        reduce using rule 12 (expression -> LBRACKET expression_list RBRACKET .)
    COMMA           reduce using rule 12 (expression -> LBRACKET expression_list RBRACKET .)


state 39

    (14) expression_list -> expression_list COMMA . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . NUMBER
    (9) expression -> . FLOAT
    (10) expression -> . STRING
    (11) expression -> . IDENTIFIER
    (12) expression -> . LBRACKET expression_list RBRACKET
    (13) expression -> . LBRACKET RBRACKET
    (16) expression -> . IDENTIFIER LPAREN expression RPAREN
    (17) expression -> . IDENTIFIER LPAREN expression COMMA expression RPAREN
    (18) expression -> . MAP LPAREN expression RPAREN
    (19) expression -> . FOLD LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 9
    IDENTIFIER      shift and go to state 22
    LBRACKET        shift and go to state 10
    MAP             shift and go to state 11
    FOLD            shift and go to state 12

    expression                     shift and go to state 50

state 40

    (18) expression -> MAP LPAREN expression . RPAREN
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 51
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19


state 41

    (19) expression -> FOLD LPAREN expression . COMMA expression RPAREN
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    COMMA           shift and go to state 52
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19


state 42

    (1) statement -> IDENTIFIER EQUALS expression SEMI .

    $end            reduce using rule 1 (statement -> IDENTIFIER EQUALS expression SEMI .)
    FIM             reduce using rule 1 (statement -> IDENTIFIER EQUALS expression SEMI .)
    IDENTIFIER      reduce using rule 1 (statement -> IDENTIFIER EQUALS expression SEMI .)
    FUNCAO          reduce using rule 1 (statement -> IDENTIFIER EQUALS expression SEMI .)
    ESCREVER        reduce using rule 1 (statement -> IDENTIFIER EQUALS expression SEMI .)
    LPAREN          reduce using rule 1 (statement -> IDENTIFIER EQUALS expression SEMI .)
    NUMBER          reduce using rule 1 (statement -> IDENTIFIER EQUALS expression SEMI .)
    FLOAT           reduce using rule 1 (statement -> IDENTIFIER EQUALS expression SEMI .)
    STRING          reduce using rule 1 (statement -> IDENTIFIER EQUALS expression SEMI .)
    LBRACKET        reduce using rule 1 (statement -> IDENTIFIER EQUALS expression SEMI .)
    MAP             reduce using rule 1 (statement -> IDENTIFIER EQUALS expression SEMI .)
    FOLD            reduce using rule 1 (statement -> IDENTIFIER EQUALS expression SEMI .)


state 43

    (16) expression -> IDENTIFIER LPAREN expression RPAREN .

    SEMI            reduce using rule 16 (expression -> IDENTIFIER LPAREN expression RPAREN .)
    PLUS            reduce using rule 16 (expression -> IDENTIFIER LPAREN expression RPAREN .)
    MINUS           reduce using rule 16 (expression -> IDENTIFIER LPAREN expression RPAREN .)
    TIMES           reduce using rule 16 (expression -> IDENTIFIER LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 16 (expression -> IDENTIFIER LPAREN expression RPAREN .)
    RPAREN          reduce using rule 16 (expression -> IDENTIFIER LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 16 (expression -> IDENTIFIER LPAREN expression RPAREN .)
    COMMA           reduce using rule 16 (expression -> IDENTIFIER LPAREN expression RPAREN .)


state 44

    (17) expression -> IDENTIFIER LPAREN expression COMMA . expression RPAREN
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . NUMBER
    (9) expression -> . FLOAT
    (10) expression -> . STRING
    (11) expression -> . IDENTIFIER
    (12) expression -> . LBRACKET expression_list RBRACKET
    (13) expression -> . LBRACKET RBRACKET
    (16) expression -> . IDENTIFIER LPAREN expression RPAREN
    (17) expression -> . IDENTIFIER LPAREN expression COMMA expression RPAREN
    (18) expression -> . MAP LPAREN expression RPAREN
    (19) expression -> . FOLD LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 9
    IDENTIFIER      shift and go to state 22
    LBRACKET        shift and go to state 10
    MAP             shift and go to state 11
    FOLD            shift and go to state 12

    expression                     shift and go to state 53

state 45

    (23) params -> IDENTIFIER .

    RPAREN          reduce using rule 23 (params -> IDENTIFIER .)
    COMMA           reduce using rule 23 (params -> IDENTIFIER .)


state 46

    (20) statement -> FUNCAO IDENTIFIER LPAREN params . RPAREN COLON expression SEMI
    (21) statement -> FUNCAO IDENTIFIER LPAREN params . RPAREN COLON statement_list FIM
    (22) params -> params . COMMA IDENTIFIER

    RPAREN          shift and go to state 54
    COMMA           shift and go to state 55


state 47

    (24) params -> empty .

    RPAREN          reduce using rule 24 (params -> empty .)
    COMMA           reduce using rule 24 (params -> empty .)


state 48

    (27) statement -> ESCREVER LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 56


state 49

    (28) statement -> ESCREVER LPAREN expression COMMA . expression RPAREN SEMI
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . NUMBER
    (9) expression -> . FLOAT
    (10) expression -> . STRING
    (11) expression -> . IDENTIFIER
    (12) expression -> . LBRACKET expression_list RBRACKET
    (13) expression -> . LBRACKET RBRACKET
    (16) expression -> . IDENTIFIER LPAREN expression RPAREN
    (17) expression -> . IDENTIFIER LPAREN expression COMMA expression RPAREN
    (18) expression -> . MAP LPAREN expression RPAREN
    (19) expression -> . FOLD LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 9
    IDENTIFIER      shift and go to state 22
    LBRACKET        shift and go to state 10
    MAP             shift and go to state 11
    FOLD            shift and go to state 12

    expression                     shift and go to state 57

state 50

    (14) expression_list -> expression_list COMMA expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    RBRACKET        reduce using rule 14 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 14 (expression_list -> expression_list COMMA expression .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19


state 51

    (18) expression -> MAP LPAREN expression RPAREN .

    SEMI            reduce using rule 18 (expression -> MAP LPAREN expression RPAREN .)
    PLUS            reduce using rule 18 (expression -> MAP LPAREN expression RPAREN .)
    MINUS           reduce using rule 18 (expression -> MAP LPAREN expression RPAREN .)
    TIMES           reduce using rule 18 (expression -> MAP LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 18 (expression -> MAP LPAREN expression RPAREN .)
    RPAREN          reduce using rule 18 (expression -> MAP LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 18 (expression -> MAP LPAREN expression RPAREN .)
    COMMA           reduce using rule 18 (expression -> MAP LPAREN expression RPAREN .)


state 52

    (19) expression -> FOLD LPAREN expression COMMA . expression RPAREN
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . NUMBER
    (9) expression -> . FLOAT
    (10) expression -> . STRING
    (11) expression -> . IDENTIFIER
    (12) expression -> . LBRACKET expression_list RBRACKET
    (13) expression -> . LBRACKET RBRACKET
    (16) expression -> . IDENTIFIER LPAREN expression RPAREN
    (17) expression -> . IDENTIFIER LPAREN expression COMMA expression RPAREN
    (18) expression -> . MAP LPAREN expression RPAREN
    (19) expression -> . FOLD LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 9
    IDENTIFIER      shift and go to state 22
    LBRACKET        shift and go to state 10
    MAP             shift and go to state 11
    FOLD            shift and go to state 12

    expression                     shift and go to state 58

state 53

    (17) expression -> IDENTIFIER LPAREN expression COMMA expression . RPAREN
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 59
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19


state 54

    (20) statement -> FUNCAO IDENTIFIER LPAREN params RPAREN . COLON expression SEMI
    (21) statement -> FUNCAO IDENTIFIER LPAREN params RPAREN . COLON statement_list FIM

    COLON           shift and go to state 60


state 55

    (22) params -> params COMMA . IDENTIFIER

    IDENTIFIER      shift and go to state 61


state 56

    (27) statement -> ESCREVER LPAREN expression RPAREN SEMI .

    $end            reduce using rule 27 (statement -> ESCREVER LPAREN expression RPAREN SEMI .)
    FIM             reduce using rule 27 (statement -> ESCREVER LPAREN expression RPAREN SEMI .)
    IDENTIFIER      reduce using rule 27 (statement -> ESCREVER LPAREN expression RPAREN SEMI .)
    FUNCAO          reduce using rule 27 (statement -> ESCREVER LPAREN expression RPAREN SEMI .)
    ESCREVER        reduce using rule 27 (statement -> ESCREVER LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 27 (statement -> ESCREVER LPAREN expression RPAREN SEMI .)
    NUMBER          reduce using rule 27 (statement -> ESCREVER LPAREN expression RPAREN SEMI .)
    FLOAT           reduce using rule 27 (statement -> ESCREVER LPAREN expression RPAREN SEMI .)
    STRING          reduce using rule 27 (statement -> ESCREVER LPAREN expression RPAREN SEMI .)
    LBRACKET        reduce using rule 27 (statement -> ESCREVER LPAREN expression RPAREN SEMI .)
    MAP             reduce using rule 27 (statement -> ESCREVER LPAREN expression RPAREN SEMI .)
    FOLD            reduce using rule 27 (statement -> ESCREVER LPAREN expression RPAREN SEMI .)


state 57

    (28) statement -> ESCREVER LPAREN expression COMMA expression . RPAREN SEMI
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 62
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19


state 58

    (19) expression -> FOLD LPAREN expression COMMA expression . RPAREN
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 63
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19


state 59

    (17) expression -> IDENTIFIER LPAREN expression COMMA expression RPAREN .

    SEMI            reduce using rule 17 (expression -> IDENTIFIER LPAREN expression COMMA expression RPAREN .)
    PLUS            reduce using rule 17 (expression -> IDENTIFIER LPAREN expression COMMA expression RPAREN .)
    MINUS           reduce using rule 17 (expression -> IDENTIFIER LPAREN expression COMMA expression RPAREN .)
    TIMES           reduce using rule 17 (expression -> IDENTIFIER LPAREN expression COMMA expression RPAREN .)
    DIVIDE          reduce using rule 17 (expression -> IDENTIFIER LPAREN expression COMMA expression RPAREN .)
    RPAREN          reduce using rule 17 (expression -> IDENTIFIER LPAREN expression COMMA expression RPAREN .)
    RBRACKET        reduce using rule 17 (expression -> IDENTIFIER LPAREN expression COMMA expression RPAREN .)
    COMMA           reduce using rule 17 (expression -> IDENTIFIER LPAREN expression COMMA expression RPAREN .)


state 60

    (20) statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON . expression SEMI
    (21) statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON . statement_list FIM
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . NUMBER
    (9) expression -> . FLOAT
    (10) expression -> . STRING
    (11) expression -> . IDENTIFIER
    (12) expression -> . LBRACKET expression_list RBRACKET
    (13) expression -> . LBRACKET RBRACKET
    (16) expression -> . IDENTIFIER LPAREN expression RPAREN
    (17) expression -> . IDENTIFIER LPAREN expression COMMA expression RPAREN
    (18) expression -> . MAP LPAREN expression RPAREN
    (19) expression -> . FOLD LPAREN expression COMMA expression RPAREN
    (25) statement_list -> . statement_list statement
    (26) statement_list -> . statement
    (1) statement -> . IDENTIFIER EQUALS expression SEMI
    (2) statement -> . expression SEMI
    (20) statement -> . FUNCAO IDENTIFIER LPAREN params RPAREN COLON expression SEMI
    (21) statement -> . FUNCAO IDENTIFIER LPAREN params RPAREN COLON statement_list FIM
    (27) statement -> . ESCREVER LPAREN expression RPAREN SEMI
    (28) statement -> . ESCREVER LPAREN expression COMMA expression RPAREN SEMI

    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 9
    IDENTIFIER      shift and go to state 64
    LBRACKET        shift and go to state 10
    MAP             shift and go to state 11
    FOLD            shift and go to state 12
    FUNCAO          shift and go to state 4
    ESCREVER        shift and go to state 6

    expression                     shift and go to state 65
    statement_list                 shift and go to state 66
    statement                      shift and go to state 67

state 61

    (22) params -> params COMMA IDENTIFIER .

    RPAREN          reduce using rule 22 (params -> params COMMA IDENTIFIER .)
    COMMA           reduce using rule 22 (params -> params COMMA IDENTIFIER .)


state 62

    (28) statement -> ESCREVER LPAREN expression COMMA expression RPAREN . SEMI

    SEMI            shift and go to state 68


state 63

    (19) expression -> FOLD LPAREN expression COMMA expression RPAREN .

    SEMI            reduce using rule 19 (expression -> FOLD LPAREN expression COMMA expression RPAREN .)
    PLUS            reduce using rule 19 (expression -> FOLD LPAREN expression COMMA expression RPAREN .)
    MINUS           reduce using rule 19 (expression -> FOLD LPAREN expression COMMA expression RPAREN .)
    TIMES           reduce using rule 19 (expression -> FOLD LPAREN expression COMMA expression RPAREN .)
    DIVIDE          reduce using rule 19 (expression -> FOLD LPAREN expression COMMA expression RPAREN .)
    RPAREN          reduce using rule 19 (expression -> FOLD LPAREN expression COMMA expression RPAREN .)
    RBRACKET        reduce using rule 19 (expression -> FOLD LPAREN expression COMMA expression RPAREN .)
    COMMA           reduce using rule 19 (expression -> FOLD LPAREN expression COMMA expression RPAREN .)


state 64

    (11) expression -> IDENTIFIER .
    (16) expression -> IDENTIFIER . LPAREN expression RPAREN
    (17) expression -> IDENTIFIER . LPAREN expression COMMA expression RPAREN
    (1) statement -> IDENTIFIER . EQUALS expression SEMI

    SEMI            reduce using rule 11 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 11 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 11 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 11 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 11 (expression -> IDENTIFIER .)
    LPAREN          shift and go to state 14
    EQUALS          shift and go to state 13


state 65

    (20) statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON expression . SEMI
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (2) statement -> expression . SEMI

    SEMI            shift and go to state 69
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19


state 66

    (21) statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON statement_list . FIM
    (25) statement_list -> statement_list . statement
    (1) statement -> . IDENTIFIER EQUALS expression SEMI
    (2) statement -> . expression SEMI
    (20) statement -> . FUNCAO IDENTIFIER LPAREN params RPAREN COLON expression SEMI
    (21) statement -> . FUNCAO IDENTIFIER LPAREN params RPAREN COLON statement_list FIM
    (27) statement -> . ESCREVER LPAREN expression RPAREN SEMI
    (28) statement -> . ESCREVER LPAREN expression COMMA expression RPAREN SEMI
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . NUMBER
    (9) expression -> . FLOAT
    (10) expression -> . STRING
    (11) expression -> . IDENTIFIER
    (12) expression -> . LBRACKET expression_list RBRACKET
    (13) expression -> . LBRACKET RBRACKET
    (16) expression -> . IDENTIFIER LPAREN expression RPAREN
    (17) expression -> . IDENTIFIER LPAREN expression COMMA expression RPAREN
    (18) expression -> . MAP LPAREN expression RPAREN
    (19) expression -> . FOLD LPAREN expression COMMA expression RPAREN

    FIM             shift and go to state 70
    IDENTIFIER      shift and go to state 2
    FUNCAO          shift and go to state 4
    ESCREVER        shift and go to state 6
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 7
    FLOAT           shift and go to state 8
    STRING          shift and go to state 9
    LBRACKET        shift and go to state 10
    MAP             shift and go to state 11
    FOLD            shift and go to state 12

    statement                      shift and go to state 71
    expression                     shift and go to state 3

state 67

    (26) statement_list -> statement .

    FIM             reduce using rule 26 (statement_list -> statement .)
    IDENTIFIER      reduce using rule 26 (statement_list -> statement .)
    FUNCAO          reduce using rule 26 (statement_list -> statement .)
    ESCREVER        reduce using rule 26 (statement_list -> statement .)
    LPAREN          reduce using rule 26 (statement_list -> statement .)
    NUMBER          reduce using rule 26 (statement_list -> statement .)
    FLOAT           reduce using rule 26 (statement_list -> statement .)
    STRING          reduce using rule 26 (statement_list -> statement .)
    LBRACKET        reduce using rule 26 (statement_list -> statement .)
    MAP             reduce using rule 26 (statement_list -> statement .)
    FOLD            reduce using rule 26 (statement_list -> statement .)


state 68

    (28) statement -> ESCREVER LPAREN expression COMMA expression RPAREN SEMI .

    $end            reduce using rule 28 (statement -> ESCREVER LPAREN expression COMMA expression RPAREN SEMI .)
    FIM             reduce using rule 28 (statement -> ESCREVER LPAREN expression COMMA expression RPAREN SEMI .)
    IDENTIFIER      reduce using rule 28 (statement -> ESCREVER LPAREN expression COMMA expression RPAREN SEMI .)
    FUNCAO          reduce using rule 28 (statement -> ESCREVER LPAREN expression COMMA expression RPAREN SEMI .)
    ESCREVER        reduce using rule 28 (statement -> ESCREVER LPAREN expression COMMA expression RPAREN SEMI .)
    LPAREN          reduce using rule 28 (statement -> ESCREVER LPAREN expression COMMA expression RPAREN SEMI .)
    NUMBER          reduce using rule 28 (statement -> ESCREVER LPAREN expression COMMA expression RPAREN SEMI .)
    FLOAT           reduce using rule 28 (statement -> ESCREVER LPAREN expression COMMA expression RPAREN SEMI .)
    STRING          reduce using rule 28 (statement -> ESCREVER LPAREN expression COMMA expression RPAREN SEMI .)
    LBRACKET        reduce using rule 28 (statement -> ESCREVER LPAREN expression COMMA expression RPAREN SEMI .)
    MAP             reduce using rule 28 (statement -> ESCREVER LPAREN expression COMMA expression RPAREN SEMI .)
    FOLD            reduce using rule 28 (statement -> ESCREVER LPAREN expression COMMA expression RPAREN SEMI .)


state 69

    (20) statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON expression SEMI .
    (2) statement -> expression SEMI .

  ! reduce/reduce conflict for FIM resolved using rule 2 (statement -> expression SEMI .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 2 (statement -> expression SEMI .)
  ! reduce/reduce conflict for FUNCAO resolved using rule 2 (statement -> expression SEMI .)
  ! reduce/reduce conflict for ESCREVER resolved using rule 2 (statement -> expression SEMI .)
  ! reduce/reduce conflict for LPAREN resolved using rule 2 (statement -> expression SEMI .)
  ! reduce/reduce conflict for NUMBER resolved using rule 2 (statement -> expression SEMI .)
  ! reduce/reduce conflict for FLOAT resolved using rule 2 (statement -> expression SEMI .)
  ! reduce/reduce conflict for STRING resolved using rule 2 (statement -> expression SEMI .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 2 (statement -> expression SEMI .)
  ! reduce/reduce conflict for MAP resolved using rule 2 (statement -> expression SEMI .)
  ! reduce/reduce conflict for FOLD resolved using rule 2 (statement -> expression SEMI .)
    $end            reduce using rule 20 (statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON expression SEMI .)
    FIM             reduce using rule 2 (statement -> expression SEMI .)
    IDENTIFIER      reduce using rule 2 (statement -> expression SEMI .)
    FUNCAO          reduce using rule 2 (statement -> expression SEMI .)
    ESCREVER        reduce using rule 2 (statement -> expression SEMI .)
    LPAREN          reduce using rule 2 (statement -> expression SEMI .)
    NUMBER          reduce using rule 2 (statement -> expression SEMI .)
    FLOAT           reduce using rule 2 (statement -> expression SEMI .)
    STRING          reduce using rule 2 (statement -> expression SEMI .)
    LBRACKET        reduce using rule 2 (statement -> expression SEMI .)
    MAP             reduce using rule 2 (statement -> expression SEMI .)
    FOLD            reduce using rule 2 (statement -> expression SEMI .)

  ! FIM             [ reduce using rule 20 (statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON expression SEMI .) ]
  ! IDENTIFIER      [ reduce using rule 20 (statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON expression SEMI .) ]
  ! FUNCAO          [ reduce using rule 20 (statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON expression SEMI .) ]
  ! ESCREVER        [ reduce using rule 20 (statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON expression SEMI .) ]
  ! LPAREN          [ reduce using rule 20 (statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON expression SEMI .) ]
  ! NUMBER          [ reduce using rule 20 (statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON expression SEMI .) ]
  ! FLOAT           [ reduce using rule 20 (statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON expression SEMI .) ]
  ! STRING          [ reduce using rule 20 (statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON expression SEMI .) ]
  ! LBRACKET        [ reduce using rule 20 (statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON expression SEMI .) ]
  ! MAP             [ reduce using rule 20 (statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON expression SEMI .) ]
  ! FOLD            [ reduce using rule 20 (statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON expression SEMI .) ]


state 70

    (21) statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON statement_list FIM .

    $end            reduce using rule 21 (statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON statement_list FIM .)
    FIM             reduce using rule 21 (statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON statement_list FIM .)
    IDENTIFIER      reduce using rule 21 (statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON statement_list FIM .)
    FUNCAO          reduce using rule 21 (statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON statement_list FIM .)
    ESCREVER        reduce using rule 21 (statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON statement_list FIM .)
    LPAREN          reduce using rule 21 (statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON statement_list FIM .)
    NUMBER          reduce using rule 21 (statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON statement_list FIM .)
    FLOAT           reduce using rule 21 (statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON statement_list FIM .)
    STRING          reduce using rule 21 (statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON statement_list FIM .)
    LBRACKET        reduce using rule 21 (statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON statement_list FIM .)
    MAP             reduce using rule 21 (statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON statement_list FIM .)
    FOLD            reduce using rule 21 (statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON statement_list FIM .)


state 71

    (25) statement_list -> statement_list statement .

    FIM             reduce using rule 25 (statement_list -> statement_list statement .)
    IDENTIFIER      reduce using rule 25 (statement_list -> statement_list statement .)
    FUNCAO          reduce using rule 25 (statement_list -> statement_list statement .)
    ESCREVER        reduce using rule 25 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 25 (statement_list -> statement_list statement .)
    NUMBER          reduce using rule 25 (statement_list -> statement_list statement .)
    FLOAT           reduce using rule 25 (statement_list -> statement_list statement .)
    STRING          reduce using rule 25 (statement_list -> statement_list statement .)
    LBRACKET        reduce using rule 25 (statement_list -> statement_list statement .)
    MAP             reduce using rule 25 (statement_list -> statement_list statement .)
    FOLD            reduce using rule 25 (statement_list -> statement_list statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 31 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 31 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 31 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 31 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 32 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 32 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 32 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 32 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 33 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 33 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 33 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 33 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 34 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 34 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 34 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 34 resolved as shift
WARNING: reduce/reduce conflict in state 69 resolved using rule (statement -> expression SEMI)
WARNING: rejected rule (statement -> FUNCAO IDENTIFIER LPAREN params RPAREN COLON expression SEMI) in state 69
